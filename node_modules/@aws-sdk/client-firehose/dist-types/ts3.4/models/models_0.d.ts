import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { FirehoseServiceException as __BaseException } from "./FirehoseServiceException";
export interface AmazonOpenSearchServerlessBufferingHints {
  IntervalInSeconds?: number | undefined;
  SizeInMBs?: number | undefined;
}
export interface CloudWatchLoggingOptions {
  Enabled?: boolean | undefined;
  LogGroupName?: string | undefined;
  LogStreamName?: string | undefined;
}
export declare const ProcessorParameterName: {
  readonly BUFFER_INTERVAL_IN_SECONDS: "BufferIntervalInSeconds";
  readonly BUFFER_SIZE_IN_MB: "BufferSizeInMBs";
  readonly COMPRESSION_FORMAT: "CompressionFormat";
  readonly DATA_MESSAGE_EXTRACTION: "DataMessageExtraction";
  readonly Delimiter: "Delimiter";
  readonly JSON_PARSING_ENGINE: "JsonParsingEngine";
  readonly LAMBDA_ARN: "LambdaArn";
  readonly LAMBDA_NUMBER_OF_RETRIES: "NumberOfRetries";
  readonly METADATA_EXTRACTION_QUERY: "MetadataExtractionQuery";
  readonly ROLE_ARN: "RoleArn";
  readonly SUB_RECORD_TYPE: "SubRecordType";
};
export type ProcessorParameterName =
  (typeof ProcessorParameterName)[keyof typeof ProcessorParameterName];
export interface ProcessorParameter {
  ParameterName: ProcessorParameterName | undefined;
  ParameterValue: string | undefined;
}
export declare const ProcessorType: {
  readonly AppendDelimiterToRecord: "AppendDelimiterToRecord";
  readonly CloudWatchLogProcessing: "CloudWatchLogProcessing";
  readonly Decompression: "Decompression";
  readonly Lambda: "Lambda";
  readonly MetadataExtraction: "MetadataExtraction";
  readonly RecordDeAggregation: "RecordDeAggregation";
};
export type ProcessorType = (typeof ProcessorType)[keyof typeof ProcessorType];
export interface Processor {
  Type: ProcessorType | undefined;
  Parameters?: ProcessorParameter[] | undefined;
}
export interface ProcessingConfiguration {
  Enabled?: boolean | undefined;
  Processors?: Processor[] | undefined;
}
export interface AmazonOpenSearchServerlessRetryOptions {
  DurationInSeconds?: number | undefined;
}
export declare const AmazonOpenSearchServerlessS3BackupMode: {
  readonly AllDocuments: "AllDocuments";
  readonly FailedDocumentsOnly: "FailedDocumentsOnly";
};
export type AmazonOpenSearchServerlessS3BackupMode =
  (typeof AmazonOpenSearchServerlessS3BackupMode)[keyof typeof AmazonOpenSearchServerlessS3BackupMode];
export interface BufferingHints {
  SizeInMBs?: number | undefined;
  IntervalInSeconds?: number | undefined;
}
export declare const CompressionFormat: {
  readonly GZIP: "GZIP";
  readonly HADOOP_SNAPPY: "HADOOP_SNAPPY";
  readonly SNAPPY: "Snappy";
  readonly UNCOMPRESSED: "UNCOMPRESSED";
  readonly ZIP: "ZIP";
};
export type CompressionFormat =
  (typeof CompressionFormat)[keyof typeof CompressionFormat];
export interface KMSEncryptionConfig {
  AWSKMSKeyARN: string | undefined;
}
export declare const NoEncryptionConfig: {
  readonly NoEncryption: "NoEncryption";
};
export type NoEncryptionConfig =
  (typeof NoEncryptionConfig)[keyof typeof NoEncryptionConfig];
export interface EncryptionConfiguration {
  NoEncryptionConfig?: NoEncryptionConfig | undefined;
  KMSEncryptionConfig?: KMSEncryptionConfig | undefined;
}
export interface S3DestinationConfiguration {
  RoleARN: string | undefined;
  BucketARN: string | undefined;
  Prefix?: string | undefined;
  ErrorOutputPrefix?: string | undefined;
  BufferingHints?: BufferingHints | undefined;
  CompressionFormat?: CompressionFormat | undefined;
  EncryptionConfiguration?: EncryptionConfiguration | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
}
export interface VpcConfiguration {
  SubnetIds: string[] | undefined;
  RoleARN: string | undefined;
  SecurityGroupIds: string[] | undefined;
}
export interface AmazonOpenSearchServerlessDestinationConfiguration {
  RoleARN: string | undefined;
  CollectionEndpoint?: string | undefined;
  IndexName: string | undefined;
  BufferingHints?: AmazonOpenSearchServerlessBufferingHints | undefined;
  RetryOptions?: AmazonOpenSearchServerlessRetryOptions | undefined;
  S3BackupMode?: AmazonOpenSearchServerlessS3BackupMode | undefined;
  S3Configuration: S3DestinationConfiguration | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  VpcConfiguration?: VpcConfiguration | undefined;
}
export interface S3DestinationDescription {
  RoleARN: string | undefined;
  BucketARN: string | undefined;
  Prefix?: string | undefined;
  ErrorOutputPrefix?: string | undefined;
  BufferingHints: BufferingHints | undefined;
  CompressionFormat: CompressionFormat | undefined;
  EncryptionConfiguration: EncryptionConfiguration | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
}
export interface VpcConfigurationDescription {
  SubnetIds: string[] | undefined;
  RoleARN: string | undefined;
  SecurityGroupIds: string[] | undefined;
  VpcId: string | undefined;
}
export interface AmazonOpenSearchServerlessDestinationDescription {
  RoleARN?: string | undefined;
  CollectionEndpoint?: string | undefined;
  IndexName?: string | undefined;
  BufferingHints?: AmazonOpenSearchServerlessBufferingHints | undefined;
  RetryOptions?: AmazonOpenSearchServerlessRetryOptions | undefined;
  S3BackupMode?: AmazonOpenSearchServerlessS3BackupMode | undefined;
  S3DestinationDescription?: S3DestinationDescription | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  VpcConfigurationDescription?: VpcConfigurationDescription | undefined;
}
export interface S3DestinationUpdate {
  RoleARN?: string | undefined;
  BucketARN?: string | undefined;
  Prefix?: string | undefined;
  ErrorOutputPrefix?: string | undefined;
  BufferingHints?: BufferingHints | undefined;
  CompressionFormat?: CompressionFormat | undefined;
  EncryptionConfiguration?: EncryptionConfiguration | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
}
export interface AmazonOpenSearchServerlessDestinationUpdate {
  RoleARN?: string | undefined;
  CollectionEndpoint?: string | undefined;
  IndexName?: string | undefined;
  BufferingHints?: AmazonOpenSearchServerlessBufferingHints | undefined;
  RetryOptions?: AmazonOpenSearchServerlessRetryOptions | undefined;
  S3Update?: S3DestinationUpdate | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
}
export interface AmazonopensearchserviceBufferingHints {
  IntervalInSeconds?: number | undefined;
  SizeInMBs?: number | undefined;
}
export declare const DefaultDocumentIdFormat: {
  readonly FIREHOSE_DEFAULT: "FIREHOSE_DEFAULT";
  readonly NO_DOCUMENT_ID: "NO_DOCUMENT_ID";
};
export type DefaultDocumentIdFormat =
  (typeof DefaultDocumentIdFormat)[keyof typeof DefaultDocumentIdFormat];
export interface DocumentIdOptions {
  DefaultDocumentIdFormat: DefaultDocumentIdFormat | undefined;
}
export declare const AmazonopensearchserviceIndexRotationPeriod: {
  readonly NoRotation: "NoRotation";
  readonly OneDay: "OneDay";
  readonly OneHour: "OneHour";
  readonly OneMonth: "OneMonth";
  readonly OneWeek: "OneWeek";
};
export type AmazonopensearchserviceIndexRotationPeriod =
  (typeof AmazonopensearchserviceIndexRotationPeriod)[keyof typeof AmazonopensearchserviceIndexRotationPeriod];
export interface AmazonopensearchserviceRetryOptions {
  DurationInSeconds?: number | undefined;
}
export declare const AmazonopensearchserviceS3BackupMode: {
  readonly AllDocuments: "AllDocuments";
  readonly FailedDocumentsOnly: "FailedDocumentsOnly";
};
export type AmazonopensearchserviceS3BackupMode =
  (typeof AmazonopensearchserviceS3BackupMode)[keyof typeof AmazonopensearchserviceS3BackupMode];
export interface AmazonopensearchserviceDestinationConfiguration {
  RoleARN: string | undefined;
  DomainARN?: string | undefined;
  ClusterEndpoint?: string | undefined;
  IndexName: string | undefined;
  TypeName?: string | undefined;
  IndexRotationPeriod?: AmazonopensearchserviceIndexRotationPeriod | undefined;
  BufferingHints?: AmazonopensearchserviceBufferingHints | undefined;
  RetryOptions?: AmazonopensearchserviceRetryOptions | undefined;
  S3BackupMode?: AmazonopensearchserviceS3BackupMode | undefined;
  S3Configuration: S3DestinationConfiguration | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  VpcConfiguration?: VpcConfiguration | undefined;
  DocumentIdOptions?: DocumentIdOptions | undefined;
}
export interface AmazonopensearchserviceDestinationDescription {
  RoleARN?: string | undefined;
  DomainARN?: string | undefined;
  ClusterEndpoint?: string | undefined;
  IndexName?: string | undefined;
  TypeName?: string | undefined;
  IndexRotationPeriod?: AmazonopensearchserviceIndexRotationPeriod | undefined;
  BufferingHints?: AmazonopensearchserviceBufferingHints | undefined;
  RetryOptions?: AmazonopensearchserviceRetryOptions | undefined;
  S3BackupMode?: AmazonopensearchserviceS3BackupMode | undefined;
  S3DestinationDescription?: S3DestinationDescription | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  VpcConfigurationDescription?: VpcConfigurationDescription | undefined;
  DocumentIdOptions?: DocumentIdOptions | undefined;
}
export interface AmazonopensearchserviceDestinationUpdate {
  RoleARN?: string | undefined;
  DomainARN?: string | undefined;
  ClusterEndpoint?: string | undefined;
  IndexName?: string | undefined;
  TypeName?: string | undefined;
  IndexRotationPeriod?: AmazonopensearchserviceIndexRotationPeriod | undefined;
  BufferingHints?: AmazonopensearchserviceBufferingHints | undefined;
  RetryOptions?: AmazonopensearchserviceRetryOptions | undefined;
  S3Update?: S3DestinationUpdate | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  DocumentIdOptions?: DocumentIdOptions | undefined;
}
export declare const Connectivity: {
  readonly PRIVATE: "PRIVATE";
  readonly PUBLIC: "PUBLIC";
};
export type Connectivity = (typeof Connectivity)[keyof typeof Connectivity];
export interface AuthenticationConfiguration {
  RoleARN: string | undefined;
  Connectivity: Connectivity | undefined;
}
export interface CatalogConfiguration {
  CatalogARN?: string | undefined;
  WarehouseLocation?: string | undefined;
}
export declare class ConcurrentModificationException extends __BaseException {
  readonly name: "ConcurrentModificationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ConcurrentModificationException,
      __BaseException
    >
  );
}
export declare const ContentEncoding: {
  readonly GZIP: "GZIP";
  readonly NONE: "NONE";
};
export type ContentEncoding =
  (typeof ContentEncoding)[keyof typeof ContentEncoding];
export interface CopyCommand {
  DataTableName: string | undefined;
  DataTableColumns?: string | undefined;
  CopyOptions?: string | undefined;
}
export interface DatabaseColumnList {
  Include?: string[] | undefined;
  Exclude?: string[] | undefined;
}
export interface DatabaseList {
  Include?: string[] | undefined;
  Exclude?: string[] | undefined;
}
export interface SecretsManagerConfiguration {
  SecretARN?: string | undefined;
  RoleARN?: string | undefined;
  Enabled: boolean | undefined;
}
export interface DatabaseSourceAuthenticationConfiguration {
  SecretsManagerConfiguration: SecretsManagerConfiguration | undefined;
}
export interface DatabaseSourceVPCConfiguration {
  VpcEndpointServiceName: string | undefined;
}
export declare const SSLMode: {
  readonly Disabled: "Disabled";
  readonly Enabled: "Enabled";
};
export type SSLMode = (typeof SSLMode)[keyof typeof SSLMode];
export interface DatabaseTableList {
  Include?: string[] | undefined;
  Exclude?: string[] | undefined;
}
export declare const DatabaseType: {
  readonly MySQL: "MySQL";
  readonly PostgreSQL: "PostgreSQL";
};
export type DatabaseType = (typeof DatabaseType)[keyof typeof DatabaseType];
export interface DatabaseSourceConfiguration {
  Type: DatabaseType | undefined;
  Endpoint: string | undefined;
  Port: number | undefined;
  SSLMode?: SSLMode | undefined;
  Databases: DatabaseList | undefined;
  Tables: DatabaseTableList | undefined;
  Columns?: DatabaseColumnList | undefined;
  SurrogateKeys?: string[] | undefined;
  SnapshotWatermarkTable: string | undefined;
  DatabaseSourceAuthenticationConfiguration:
    | DatabaseSourceAuthenticationConfiguration
    | undefined;
  DatabaseSourceVPCConfiguration: DatabaseSourceVPCConfiguration | undefined;
}
export declare const KeyType: {
  readonly AWS_OWNED_CMK: "AWS_OWNED_CMK";
  readonly CUSTOMER_MANAGED_CMK: "CUSTOMER_MANAGED_CMK";
};
export type KeyType = (typeof KeyType)[keyof typeof KeyType];
export interface DeliveryStreamEncryptionConfigurationInput {
  KeyARN?: string | undefined;
  KeyType: KeyType | undefined;
}
export declare const DeliveryStreamType: {
  readonly DatabaseAsSource: "DatabaseAsSource";
  readonly DirectPut: "DirectPut";
  readonly KinesisStreamAsSource: "KinesisStreamAsSource";
  readonly MSKAsSource: "MSKAsSource";
};
export type DeliveryStreamType =
  (typeof DeliveryStreamType)[keyof typeof DeliveryStreamType];
export interface DirectPutSourceConfiguration {
  ThroughputHintInMBs: number | undefined;
}
export interface ElasticsearchBufferingHints {
  IntervalInSeconds?: number | undefined;
  SizeInMBs?: number | undefined;
}
export declare const ElasticsearchIndexRotationPeriod: {
  readonly NoRotation: "NoRotation";
  readonly OneDay: "OneDay";
  readonly OneHour: "OneHour";
  readonly OneMonth: "OneMonth";
  readonly OneWeek: "OneWeek";
};
export type ElasticsearchIndexRotationPeriod =
  (typeof ElasticsearchIndexRotationPeriod)[keyof typeof ElasticsearchIndexRotationPeriod];
export interface ElasticsearchRetryOptions {
  DurationInSeconds?: number | undefined;
}
export declare const ElasticsearchS3BackupMode: {
  readonly AllDocuments: "AllDocuments";
  readonly FailedDocumentsOnly: "FailedDocumentsOnly";
};
export type ElasticsearchS3BackupMode =
  (typeof ElasticsearchS3BackupMode)[keyof typeof ElasticsearchS3BackupMode];
export interface ElasticsearchDestinationConfiguration {
  RoleARN: string | undefined;
  DomainARN?: string | undefined;
  ClusterEndpoint?: string | undefined;
  IndexName: string | undefined;
  TypeName?: string | undefined;
  IndexRotationPeriod?: ElasticsearchIndexRotationPeriod | undefined;
  BufferingHints?: ElasticsearchBufferingHints | undefined;
  RetryOptions?: ElasticsearchRetryOptions | undefined;
  S3BackupMode?: ElasticsearchS3BackupMode | undefined;
  S3Configuration: S3DestinationConfiguration | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  VpcConfiguration?: VpcConfiguration | undefined;
  DocumentIdOptions?: DocumentIdOptions | undefined;
}
export interface HiveJsonSerDe {
  TimestampFormats?: string[] | undefined;
}
export interface OpenXJsonSerDe {
  ConvertDotsInJsonKeysToUnderscores?: boolean | undefined;
  CaseInsensitive?: boolean | undefined;
  ColumnToJsonKeyMappings?: Record<string, string> | undefined;
}
export interface Deserializer {
  OpenXJsonSerDe?: OpenXJsonSerDe | undefined;
  HiveJsonSerDe?: HiveJsonSerDe | undefined;
}
export interface InputFormatConfiguration {
  Deserializer?: Deserializer | undefined;
}
export declare const OrcCompression: {
  readonly NONE: "NONE";
  readonly SNAPPY: "SNAPPY";
  readonly ZLIB: "ZLIB";
};
export type OrcCompression =
  (typeof OrcCompression)[keyof typeof OrcCompression];
export declare const OrcFormatVersion: {
  readonly V0_11: "V0_11";
  readonly V0_12: "V0_12";
};
export type OrcFormatVersion =
  (typeof OrcFormatVersion)[keyof typeof OrcFormatVersion];
export interface OrcSerDe {
  StripeSizeBytes?: number | undefined;
  BlockSizeBytes?: number | undefined;
  RowIndexStride?: number | undefined;
  EnablePadding?: boolean | undefined;
  PaddingTolerance?: number | undefined;
  Compression?: OrcCompression | undefined;
  BloomFilterColumns?: string[] | undefined;
  BloomFilterFalsePositiveProbability?: number | undefined;
  DictionaryKeyThreshold?: number | undefined;
  FormatVersion?: OrcFormatVersion | undefined;
}
export declare const ParquetCompression: {
  readonly GZIP: "GZIP";
  readonly SNAPPY: "SNAPPY";
  readonly UNCOMPRESSED: "UNCOMPRESSED";
};
export type ParquetCompression =
  (typeof ParquetCompression)[keyof typeof ParquetCompression];
export declare const ParquetWriterVersion: {
  readonly V1: "V1";
  readonly V2: "V2";
};
export type ParquetWriterVersion =
  (typeof ParquetWriterVersion)[keyof typeof ParquetWriterVersion];
export interface ParquetSerDe {
  BlockSizeBytes?: number | undefined;
  PageSizeBytes?: number | undefined;
  Compression?: ParquetCompression | undefined;
  EnableDictionaryCompression?: boolean | undefined;
  MaxPaddingBytes?: number | undefined;
  WriterVersion?: ParquetWriterVersion | undefined;
}
export interface Serializer {
  ParquetSerDe?: ParquetSerDe | undefined;
  OrcSerDe?: OrcSerDe | undefined;
}
export interface OutputFormatConfiguration {
  Serializer?: Serializer | undefined;
}
export interface SchemaConfiguration {
  RoleARN?: string | undefined;
  CatalogId?: string | undefined;
  DatabaseName?: string | undefined;
  TableName?: string | undefined;
  Region?: string | undefined;
  VersionId?: string | undefined;
}
export interface DataFormatConversionConfiguration {
  SchemaConfiguration?: SchemaConfiguration | undefined;
  InputFormatConfiguration?: InputFormatConfiguration | undefined;
  OutputFormatConfiguration?: OutputFormatConfiguration | undefined;
  Enabled?: boolean | undefined;
}
export interface RetryOptions {
  DurationInSeconds?: number | undefined;
}
export interface DynamicPartitioningConfiguration {
  RetryOptions?: RetryOptions | undefined;
  Enabled?: boolean | undefined;
}
export declare const S3BackupMode: {
  readonly Disabled: "Disabled";
  readonly Enabled: "Enabled";
};
export type S3BackupMode = (typeof S3BackupMode)[keyof typeof S3BackupMode];
export interface ExtendedS3DestinationConfiguration {
  RoleARN: string | undefined;
  BucketARN: string | undefined;
  Prefix?: string | undefined;
  ErrorOutputPrefix?: string | undefined;
  BufferingHints?: BufferingHints | undefined;
  CompressionFormat?: CompressionFormat | undefined;
  EncryptionConfiguration?: EncryptionConfiguration | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  S3BackupMode?: S3BackupMode | undefined;
  S3BackupConfiguration?: S3DestinationConfiguration | undefined;
  DataFormatConversionConfiguration?:
    | DataFormatConversionConfiguration
    | undefined;
  DynamicPartitioningConfiguration?:
    | DynamicPartitioningConfiguration
    | undefined;
  FileExtension?: string | undefined;
  CustomTimeZone?: string | undefined;
}
export interface HttpEndpointBufferingHints {
  SizeInMBs?: number | undefined;
  IntervalInSeconds?: number | undefined;
}
export interface HttpEndpointConfiguration {
  Url: string | undefined;
  Name?: string | undefined;
  AccessKey?: string | undefined;
}
export interface HttpEndpointCommonAttribute {
  AttributeName: string | undefined;
  AttributeValue: string | undefined;
}
export interface HttpEndpointRequestConfiguration {
  ContentEncoding?: ContentEncoding | undefined;
  CommonAttributes?: HttpEndpointCommonAttribute[] | undefined;
}
export interface HttpEndpointRetryOptions {
  DurationInSeconds?: number | undefined;
}
export declare const HttpEndpointS3BackupMode: {
  readonly AllData: "AllData";
  readonly FailedDataOnly: "FailedDataOnly";
};
export type HttpEndpointS3BackupMode =
  (typeof HttpEndpointS3BackupMode)[keyof typeof HttpEndpointS3BackupMode];
export interface HttpEndpointDestinationConfiguration {
  EndpointConfiguration: HttpEndpointConfiguration | undefined;
  BufferingHints?: HttpEndpointBufferingHints | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  RequestConfiguration?: HttpEndpointRequestConfiguration | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  RoleARN?: string | undefined;
  RetryOptions?: HttpEndpointRetryOptions | undefined;
  S3BackupMode?: HttpEndpointS3BackupMode | undefined;
  S3Configuration: S3DestinationConfiguration | undefined;
  SecretsManagerConfiguration?: SecretsManagerConfiguration | undefined;
}
export interface PartitionField {
  SourceName: string | undefined;
}
export interface PartitionSpec {
  Identity?: PartitionField[] | undefined;
}
export interface DestinationTableConfiguration {
  DestinationTableName: string | undefined;
  DestinationDatabaseName: string | undefined;
  UniqueKeys?: string[] | undefined;
  PartitionSpec?: PartitionSpec | undefined;
  S3ErrorOutputPrefix?: string | undefined;
}
export declare const IcebergS3BackupMode: {
  readonly AllData: "AllData";
  readonly FailedDataOnly: "FailedDataOnly";
};
export type IcebergS3BackupMode =
  (typeof IcebergS3BackupMode)[keyof typeof IcebergS3BackupMode];
export interface SchemaEvolutionConfiguration {
  Enabled: boolean | undefined;
}
export interface TableCreationConfiguration {
  Enabled: boolean | undefined;
}
export interface IcebergDestinationConfiguration {
  DestinationTableConfigurationList?:
    | DestinationTableConfiguration[]
    | undefined;
  SchemaEvolutionConfiguration?: SchemaEvolutionConfiguration | undefined;
  TableCreationConfiguration?: TableCreationConfiguration | undefined;
  BufferingHints?: BufferingHints | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  S3BackupMode?: IcebergS3BackupMode | undefined;
  RetryOptions?: RetryOptions | undefined;
  RoleARN: string | undefined;
  AppendOnly?: boolean | undefined;
  CatalogConfiguration: CatalogConfiguration | undefined;
  S3Configuration: S3DestinationConfiguration | undefined;
}
export interface KinesisStreamSourceConfiguration {
  KinesisStreamARN: string | undefined;
  RoleARN: string | undefined;
}
export interface MSKSourceConfiguration {
  MSKClusterARN: string | undefined;
  TopicName: string | undefined;
  AuthenticationConfiguration: AuthenticationConfiguration | undefined;
  ReadFromTimestamp?: Date | undefined;
}
export interface RedshiftRetryOptions {
  DurationInSeconds?: number | undefined;
}
export declare const RedshiftS3BackupMode: {
  readonly Disabled: "Disabled";
  readonly Enabled: "Enabled";
};
export type RedshiftS3BackupMode =
  (typeof RedshiftS3BackupMode)[keyof typeof RedshiftS3BackupMode];
export interface RedshiftDestinationConfiguration {
  RoleARN: string | undefined;
  ClusterJDBCURL: string | undefined;
  CopyCommand: CopyCommand | undefined;
  Username?: string | undefined;
  Password?: string | undefined;
  RetryOptions?: RedshiftRetryOptions | undefined;
  S3Configuration: S3DestinationConfiguration | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  S3BackupMode?: RedshiftS3BackupMode | undefined;
  S3BackupConfiguration?: S3DestinationConfiguration | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  SecretsManagerConfiguration?: SecretsManagerConfiguration | undefined;
}
export interface SnowflakeBufferingHints {
  SizeInMBs?: number | undefined;
  IntervalInSeconds?: number | undefined;
}
export declare const SnowflakeDataLoadingOption: {
  readonly JSON_MAPPING: "JSON_MAPPING";
  readonly VARIANT_CONTENT_AND_METADATA_MAPPING: "VARIANT_CONTENT_AND_METADATA_MAPPING";
  readonly VARIANT_CONTENT_MAPPING: "VARIANT_CONTENT_MAPPING";
};
export type SnowflakeDataLoadingOption =
  (typeof SnowflakeDataLoadingOption)[keyof typeof SnowflakeDataLoadingOption];
export interface SnowflakeRetryOptions {
  DurationInSeconds?: number | undefined;
}
export declare const SnowflakeS3BackupMode: {
  readonly AllData: "AllData";
  readonly FailedDataOnly: "FailedDataOnly";
};
export type SnowflakeS3BackupMode =
  (typeof SnowflakeS3BackupMode)[keyof typeof SnowflakeS3BackupMode];
export interface SnowflakeRoleConfiguration {
  Enabled?: boolean | undefined;
  SnowflakeRole?: string | undefined;
}
export interface SnowflakeVpcConfiguration {
  PrivateLinkVpceId: string | undefined;
}
export interface SnowflakeDestinationConfiguration {
  AccountUrl: string | undefined;
  PrivateKey?: string | undefined;
  KeyPassphrase?: string | undefined;
  User?: string | undefined;
  Database: string | undefined;
  Schema: string | undefined;
  Table: string | undefined;
  SnowflakeRoleConfiguration?: SnowflakeRoleConfiguration | undefined;
  DataLoadingOption?: SnowflakeDataLoadingOption | undefined;
  MetaDataColumnName?: string | undefined;
  ContentColumnName?: string | undefined;
  SnowflakeVpcConfiguration?: SnowflakeVpcConfiguration | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  RoleARN: string | undefined;
  RetryOptions?: SnowflakeRetryOptions | undefined;
  S3BackupMode?: SnowflakeS3BackupMode | undefined;
  S3Configuration: S3DestinationConfiguration | undefined;
  SecretsManagerConfiguration?: SecretsManagerConfiguration | undefined;
  BufferingHints?: SnowflakeBufferingHints | undefined;
}
export interface SplunkBufferingHints {
  IntervalInSeconds?: number | undefined;
  SizeInMBs?: number | undefined;
}
export declare const HECEndpointType: {
  readonly Event: "Event";
  readonly Raw: "Raw";
};
export type HECEndpointType =
  (typeof HECEndpointType)[keyof typeof HECEndpointType];
export interface SplunkRetryOptions {
  DurationInSeconds?: number | undefined;
}
export declare const SplunkS3BackupMode: {
  readonly AllEvents: "AllEvents";
  readonly FailedEventsOnly: "FailedEventsOnly";
};
export type SplunkS3BackupMode =
  (typeof SplunkS3BackupMode)[keyof typeof SplunkS3BackupMode];
export interface SplunkDestinationConfiguration {
  HECEndpoint: string | undefined;
  HECEndpointType: HECEndpointType | undefined;
  HECToken?: string | undefined;
  HECAcknowledgmentTimeoutInSeconds?: number | undefined;
  RetryOptions?: SplunkRetryOptions | undefined;
  S3BackupMode?: SplunkS3BackupMode | undefined;
  S3Configuration: S3DestinationConfiguration | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  BufferingHints?: SplunkBufferingHints | undefined;
  SecretsManagerConfiguration?: SecretsManagerConfiguration | undefined;
}
export interface Tag {
  Key: string | undefined;
  Value?: string | undefined;
}
export interface CreateDeliveryStreamInput {
  DeliveryStreamName: string | undefined;
  DeliveryStreamType?: DeliveryStreamType | undefined;
  DirectPutSourceConfiguration?: DirectPutSourceConfiguration | undefined;
  KinesisStreamSourceConfiguration?:
    | KinesisStreamSourceConfiguration
    | undefined;
  DeliveryStreamEncryptionConfigurationInput?:
    | DeliveryStreamEncryptionConfigurationInput
    | undefined;
  S3DestinationConfiguration?: S3DestinationConfiguration | undefined;
  ExtendedS3DestinationConfiguration?:
    | ExtendedS3DestinationConfiguration
    | undefined;
  RedshiftDestinationConfiguration?:
    | RedshiftDestinationConfiguration
    | undefined;
  ElasticsearchDestinationConfiguration?:
    | ElasticsearchDestinationConfiguration
    | undefined;
  AmazonopensearchserviceDestinationConfiguration?:
    | AmazonopensearchserviceDestinationConfiguration
    | undefined;
  SplunkDestinationConfiguration?: SplunkDestinationConfiguration | undefined;
  HttpEndpointDestinationConfiguration?:
    | HttpEndpointDestinationConfiguration
    | undefined;
  Tags?: Tag[] | undefined;
  AmazonOpenSearchServerlessDestinationConfiguration?:
    | AmazonOpenSearchServerlessDestinationConfiguration
    | undefined;
  MSKSourceConfiguration?: MSKSourceConfiguration | undefined;
  SnowflakeDestinationConfiguration?:
    | SnowflakeDestinationConfiguration
    | undefined;
  IcebergDestinationConfiguration?: IcebergDestinationConfiguration | undefined;
  DatabaseSourceConfiguration?: DatabaseSourceConfiguration | undefined;
}
export interface CreateDeliveryStreamOutput {
  DeliveryStreamARN?: string | undefined;
}
export declare class InvalidArgumentException extends __BaseException {
  readonly name: "InvalidArgumentException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidArgumentException, __BaseException>
  );
}
export declare class InvalidKMSResourceException extends __BaseException {
  readonly name: "InvalidKMSResourceException";
  readonly $fault: "client";
  code?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidKMSResourceException, __BaseException>
  );
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export declare class ResourceInUseException extends __BaseException {
  readonly name: "ResourceInUseException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceInUseException, __BaseException>
  );
}
export declare const DeliveryStreamFailureType: {
  readonly CREATE_ENI_FAILED: "CREATE_ENI_FAILED";
  readonly CREATE_KMS_GRANT_FAILED: "CREATE_KMS_GRANT_FAILED";
  readonly DELETE_ENI_FAILED: "DELETE_ENI_FAILED";
  readonly DISABLED_KMS_KEY: "DISABLED_KMS_KEY";
  readonly ENI_ACCESS_DENIED: "ENI_ACCESS_DENIED";
  readonly INVALID_KMS_KEY: "INVALID_KMS_KEY";
  readonly KMS_ACCESS_DENIED: "KMS_ACCESS_DENIED";
  readonly KMS_KEY_NOT_FOUND: "KMS_KEY_NOT_FOUND";
  readonly KMS_OPT_IN_REQUIRED: "KMS_OPT_IN_REQUIRED";
  readonly RETIRE_KMS_GRANT_FAILED: "RETIRE_KMS_GRANT_FAILED";
  readonly SECURITY_GROUP_ACCESS_DENIED: "SECURITY_GROUP_ACCESS_DENIED";
  readonly SECURITY_GROUP_NOT_FOUND: "SECURITY_GROUP_NOT_FOUND";
  readonly SUBNET_ACCESS_DENIED: "SUBNET_ACCESS_DENIED";
  readonly SUBNET_NOT_FOUND: "SUBNET_NOT_FOUND";
  readonly UNKNOWN_ERROR: "UNKNOWN_ERROR";
  readonly VPC_ENDPOINT_SERVICE_NAME_NOT_FOUND: "VPC_ENDPOINT_SERVICE_NAME_NOT_FOUND";
  readonly VPC_INTERFACE_ENDPOINT_SERVICE_ACCESS_DENIED: "VPC_INTERFACE_ENDPOINT_SERVICE_ACCESS_DENIED";
};
export type DeliveryStreamFailureType =
  (typeof DeliveryStreamFailureType)[keyof typeof DeliveryStreamFailureType];
export interface FailureDescription {
  Type: DeliveryStreamFailureType | undefined;
  Details: string | undefined;
}
export declare const SnapshotRequestedBy: {
  readonly FIREHOSE: "FIREHOSE";
  readonly USER: "USER";
};
export type SnapshotRequestedBy =
  (typeof SnapshotRequestedBy)[keyof typeof SnapshotRequestedBy];
export declare const SnapshotStatus: {
  readonly COMPLETE: "COMPLETE";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly SUSPENDED: "SUSPENDED";
};
export type SnapshotStatus =
  (typeof SnapshotStatus)[keyof typeof SnapshotStatus];
export interface DatabaseSnapshotInfo {
  Id: string | undefined;
  Table: string | undefined;
  RequestTimestamp: Date | undefined;
  RequestedBy: SnapshotRequestedBy | undefined;
  Status: SnapshotStatus | undefined;
  FailureDescription?: FailureDescription | undefined;
}
export interface DatabaseSourceDescription {
  Type?: DatabaseType | undefined;
  Endpoint?: string | undefined;
  Port?: number | undefined;
  SSLMode?: SSLMode | undefined;
  Databases?: DatabaseList | undefined;
  Tables?: DatabaseTableList | undefined;
  Columns?: DatabaseColumnList | undefined;
  SurrogateKeys?: string[] | undefined;
  SnapshotWatermarkTable?: string | undefined;
  SnapshotInfo?: DatabaseSnapshotInfo[] | undefined;
  DatabaseSourceAuthenticationConfiguration?:
    | DatabaseSourceAuthenticationConfiguration
    | undefined;
  DatabaseSourceVPCConfiguration?: DatabaseSourceVPCConfiguration | undefined;
}
export interface DeleteDeliveryStreamInput {
  DeliveryStreamName: string | undefined;
  AllowForceDelete?: boolean | undefined;
}
export interface DeleteDeliveryStreamOutput {}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare const DeliveryStreamEncryptionStatus: {
  readonly DISABLED: "DISABLED";
  readonly DISABLING: "DISABLING";
  readonly DISABLING_FAILED: "DISABLING_FAILED";
  readonly ENABLED: "ENABLED";
  readonly ENABLING: "ENABLING";
  readonly ENABLING_FAILED: "ENABLING_FAILED";
};
export type DeliveryStreamEncryptionStatus =
  (typeof DeliveryStreamEncryptionStatus)[keyof typeof DeliveryStreamEncryptionStatus];
export interface DeliveryStreamEncryptionConfiguration {
  KeyARN?: string | undefined;
  KeyType?: KeyType | undefined;
  Status?: DeliveryStreamEncryptionStatus | undefined;
  FailureDescription?: FailureDescription | undefined;
}
export declare const DeliveryStreamStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly CREATING: "CREATING";
  readonly CREATING_FAILED: "CREATING_FAILED";
  readonly DELETING: "DELETING";
  readonly DELETING_FAILED: "DELETING_FAILED";
};
export type DeliveryStreamStatus =
  (typeof DeliveryStreamStatus)[keyof typeof DeliveryStreamStatus];
export interface ElasticsearchDestinationDescription {
  RoleARN?: string | undefined;
  DomainARN?: string | undefined;
  ClusterEndpoint?: string | undefined;
  IndexName?: string | undefined;
  TypeName?: string | undefined;
  IndexRotationPeriod?: ElasticsearchIndexRotationPeriod | undefined;
  BufferingHints?: ElasticsearchBufferingHints | undefined;
  RetryOptions?: ElasticsearchRetryOptions | undefined;
  S3BackupMode?: ElasticsearchS3BackupMode | undefined;
  S3DestinationDescription?: S3DestinationDescription | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  VpcConfigurationDescription?: VpcConfigurationDescription | undefined;
  DocumentIdOptions?: DocumentIdOptions | undefined;
}
export interface ExtendedS3DestinationDescription {
  RoleARN: string | undefined;
  BucketARN: string | undefined;
  Prefix?: string | undefined;
  ErrorOutputPrefix?: string | undefined;
  BufferingHints: BufferingHints | undefined;
  CompressionFormat: CompressionFormat | undefined;
  EncryptionConfiguration: EncryptionConfiguration | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  S3BackupMode?: S3BackupMode | undefined;
  S3BackupDescription?: S3DestinationDescription | undefined;
  DataFormatConversionConfiguration?:
    | DataFormatConversionConfiguration
    | undefined;
  DynamicPartitioningConfiguration?:
    | DynamicPartitioningConfiguration
    | undefined;
  FileExtension?: string | undefined;
  CustomTimeZone?: string | undefined;
}
export interface HttpEndpointDescription {
  Url?: string | undefined;
  Name?: string | undefined;
}
export interface HttpEndpointDestinationDescription {
  EndpointConfiguration?: HttpEndpointDescription | undefined;
  BufferingHints?: HttpEndpointBufferingHints | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  RequestConfiguration?: HttpEndpointRequestConfiguration | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  RoleARN?: string | undefined;
  RetryOptions?: HttpEndpointRetryOptions | undefined;
  S3BackupMode?: HttpEndpointS3BackupMode | undefined;
  S3DestinationDescription?: S3DestinationDescription | undefined;
  SecretsManagerConfiguration?: SecretsManagerConfiguration | undefined;
}
export interface IcebergDestinationDescription {
  DestinationTableConfigurationList?:
    | DestinationTableConfiguration[]
    | undefined;
  SchemaEvolutionConfiguration?: SchemaEvolutionConfiguration | undefined;
  TableCreationConfiguration?: TableCreationConfiguration | undefined;
  BufferingHints?: BufferingHints | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  S3BackupMode?: IcebergS3BackupMode | undefined;
  RetryOptions?: RetryOptions | undefined;
  RoleARN?: string | undefined;
  AppendOnly?: boolean | undefined;
  CatalogConfiguration?: CatalogConfiguration | undefined;
  S3DestinationDescription?: S3DestinationDescription | undefined;
}
export interface RedshiftDestinationDescription {
  RoleARN: string | undefined;
  ClusterJDBCURL: string | undefined;
  CopyCommand: CopyCommand | undefined;
  Username?: string | undefined;
  RetryOptions?: RedshiftRetryOptions | undefined;
  S3DestinationDescription: S3DestinationDescription | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  S3BackupMode?: RedshiftS3BackupMode | undefined;
  S3BackupDescription?: S3DestinationDescription | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  SecretsManagerConfiguration?: SecretsManagerConfiguration | undefined;
}
export interface SnowflakeDestinationDescription {
  AccountUrl?: string | undefined;
  User?: string | undefined;
  Database?: string | undefined;
  Schema?: string | undefined;
  Table?: string | undefined;
  SnowflakeRoleConfiguration?: SnowflakeRoleConfiguration | undefined;
  DataLoadingOption?: SnowflakeDataLoadingOption | undefined;
  MetaDataColumnName?: string | undefined;
  ContentColumnName?: string | undefined;
  SnowflakeVpcConfiguration?: SnowflakeVpcConfiguration | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  RoleARN?: string | undefined;
  RetryOptions?: SnowflakeRetryOptions | undefined;
  S3BackupMode?: SnowflakeS3BackupMode | undefined;
  S3DestinationDescription?: S3DestinationDescription | undefined;
  SecretsManagerConfiguration?: SecretsManagerConfiguration | undefined;
  BufferingHints?: SnowflakeBufferingHints | undefined;
}
export interface SplunkDestinationDescription {
  HECEndpoint?: string | undefined;
  HECEndpointType?: HECEndpointType | undefined;
  HECToken?: string | undefined;
  HECAcknowledgmentTimeoutInSeconds?: number | undefined;
  RetryOptions?: SplunkRetryOptions | undefined;
  S3BackupMode?: SplunkS3BackupMode | undefined;
  S3DestinationDescription?: S3DestinationDescription | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  BufferingHints?: SplunkBufferingHints | undefined;
  SecretsManagerConfiguration?: SecretsManagerConfiguration | undefined;
}
export interface DestinationDescription {
  DestinationId: string | undefined;
  S3DestinationDescription?: S3DestinationDescription | undefined;
  ExtendedS3DestinationDescription?:
    | ExtendedS3DestinationDescription
    | undefined;
  RedshiftDestinationDescription?: RedshiftDestinationDescription | undefined;
  ElasticsearchDestinationDescription?:
    | ElasticsearchDestinationDescription
    | undefined;
  AmazonopensearchserviceDestinationDescription?:
    | AmazonopensearchserviceDestinationDescription
    | undefined;
  SplunkDestinationDescription?: SplunkDestinationDescription | undefined;
  HttpEndpointDestinationDescription?:
    | HttpEndpointDestinationDescription
    | undefined;
  SnowflakeDestinationDescription?: SnowflakeDestinationDescription | undefined;
  AmazonOpenSearchServerlessDestinationDescription?:
    | AmazonOpenSearchServerlessDestinationDescription
    | undefined;
  IcebergDestinationDescription?: IcebergDestinationDescription | undefined;
}
export interface DirectPutSourceDescription {
  ThroughputHintInMBs?: number | undefined;
}
export interface KinesisStreamSourceDescription {
  KinesisStreamARN?: string | undefined;
  RoleARN?: string | undefined;
  DeliveryStartTimestamp?: Date | undefined;
}
export interface MSKSourceDescription {
  MSKClusterARN?: string | undefined;
  TopicName?: string | undefined;
  AuthenticationConfiguration?: AuthenticationConfiguration | undefined;
  DeliveryStartTimestamp?: Date | undefined;
  ReadFromTimestamp?: Date | undefined;
}
export interface SourceDescription {
  DirectPutSourceDescription?: DirectPutSourceDescription | undefined;
  KinesisStreamSourceDescription?: KinesisStreamSourceDescription | undefined;
  MSKSourceDescription?: MSKSourceDescription | undefined;
  DatabaseSourceDescription?: DatabaseSourceDescription | undefined;
}
export interface DeliveryStreamDescription {
  DeliveryStreamName: string | undefined;
  DeliveryStreamARN: string | undefined;
  DeliveryStreamStatus: DeliveryStreamStatus | undefined;
  FailureDescription?: FailureDescription | undefined;
  DeliveryStreamEncryptionConfiguration?:
    | DeliveryStreamEncryptionConfiguration
    | undefined;
  DeliveryStreamType: DeliveryStreamType | undefined;
  VersionId: string | undefined;
  CreateTimestamp?: Date | undefined;
  LastUpdateTimestamp?: Date | undefined;
  Source?: SourceDescription | undefined;
  Destinations: DestinationDescription[] | undefined;
  HasMoreDestinations: boolean | undefined;
}
export interface DescribeDeliveryStreamInput {
  DeliveryStreamName: string | undefined;
  Limit?: number | undefined;
  ExclusiveStartDestinationId?: string | undefined;
}
export interface DescribeDeliveryStreamOutput {
  DeliveryStreamDescription: DeliveryStreamDescription | undefined;
}
export interface ElasticsearchDestinationUpdate {
  RoleARN?: string | undefined;
  DomainARN?: string | undefined;
  ClusterEndpoint?: string | undefined;
  IndexName?: string | undefined;
  TypeName?: string | undefined;
  IndexRotationPeriod?: ElasticsearchIndexRotationPeriod | undefined;
  BufferingHints?: ElasticsearchBufferingHints | undefined;
  RetryOptions?: ElasticsearchRetryOptions | undefined;
  S3Update?: S3DestinationUpdate | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  DocumentIdOptions?: DocumentIdOptions | undefined;
}
export interface ExtendedS3DestinationUpdate {
  RoleARN?: string | undefined;
  BucketARN?: string | undefined;
  Prefix?: string | undefined;
  ErrorOutputPrefix?: string | undefined;
  BufferingHints?: BufferingHints | undefined;
  CompressionFormat?: CompressionFormat | undefined;
  EncryptionConfiguration?: EncryptionConfiguration | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  S3BackupMode?: S3BackupMode | undefined;
  S3BackupUpdate?: S3DestinationUpdate | undefined;
  DataFormatConversionConfiguration?:
    | DataFormatConversionConfiguration
    | undefined;
  DynamicPartitioningConfiguration?:
    | DynamicPartitioningConfiguration
    | undefined;
  FileExtension?: string | undefined;
  CustomTimeZone?: string | undefined;
}
export interface ListDeliveryStreamsInput {
  Limit?: number | undefined;
  DeliveryStreamType?: DeliveryStreamType | undefined;
  ExclusiveStartDeliveryStreamName?: string | undefined;
}
export interface ListDeliveryStreamsOutput {
  DeliveryStreamNames: string[] | undefined;
  HasMoreDeliveryStreams: boolean | undefined;
}
export interface ListTagsForDeliveryStreamInput {
  DeliveryStreamName: string | undefined;
  ExclusiveStartTagKey?: string | undefined;
  Limit?: number | undefined;
}
export interface ListTagsForDeliveryStreamOutput {
  Tags: Tag[] | undefined;
  HasMoreTags: boolean | undefined;
}
export declare class InvalidSourceException extends __BaseException {
  readonly name: "InvalidSourceException";
  readonly $fault: "client";
  code?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidSourceException, __BaseException>
  );
}
export interface _Record {
  Data: Uint8Array | undefined;
}
export interface PutRecordInput {
  DeliveryStreamName: string | undefined;
  Record: _Record | undefined;
}
export interface PutRecordOutput {
  RecordId: string | undefined;
  Encrypted?: boolean | undefined;
}
export declare class ServiceUnavailableException extends __BaseException {
  readonly name: "ServiceUnavailableException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<ServiceUnavailableException, __BaseException>
  );
}
export interface PutRecordBatchInput {
  DeliveryStreamName: string | undefined;
  Records: _Record[] | undefined;
}
export interface PutRecordBatchResponseEntry {
  RecordId?: string | undefined;
  ErrorCode?: string | undefined;
  ErrorMessage?: string | undefined;
}
export interface PutRecordBatchOutput {
  FailedPutCount: number | undefined;
  Encrypted?: boolean | undefined;
  RequestResponses: PutRecordBatchResponseEntry[] | undefined;
}
export interface StartDeliveryStreamEncryptionInput {
  DeliveryStreamName: string | undefined;
  DeliveryStreamEncryptionConfigurationInput?:
    | DeliveryStreamEncryptionConfigurationInput
    | undefined;
}
export interface StartDeliveryStreamEncryptionOutput {}
export interface StopDeliveryStreamEncryptionInput {
  DeliveryStreamName: string | undefined;
}
export interface StopDeliveryStreamEncryptionOutput {}
export interface TagDeliveryStreamInput {
  DeliveryStreamName: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagDeliveryStreamOutput {}
export interface UntagDeliveryStreamInput {
  DeliveryStreamName: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagDeliveryStreamOutput {}
export interface HttpEndpointDestinationUpdate {
  EndpointConfiguration?: HttpEndpointConfiguration | undefined;
  BufferingHints?: HttpEndpointBufferingHints | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  RequestConfiguration?: HttpEndpointRequestConfiguration | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  RoleARN?: string | undefined;
  RetryOptions?: HttpEndpointRetryOptions | undefined;
  S3BackupMode?: HttpEndpointS3BackupMode | undefined;
  S3Update?: S3DestinationUpdate | undefined;
  SecretsManagerConfiguration?: SecretsManagerConfiguration | undefined;
}
export interface IcebergDestinationUpdate {
  DestinationTableConfigurationList?:
    | DestinationTableConfiguration[]
    | undefined;
  SchemaEvolutionConfiguration?: SchemaEvolutionConfiguration | undefined;
  TableCreationConfiguration?: TableCreationConfiguration | undefined;
  BufferingHints?: BufferingHints | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  S3BackupMode?: IcebergS3BackupMode | undefined;
  RetryOptions?: RetryOptions | undefined;
  RoleARN?: string | undefined;
  AppendOnly?: boolean | undefined;
  CatalogConfiguration?: CatalogConfiguration | undefined;
  S3Configuration?: S3DestinationConfiguration | undefined;
}
export interface RedshiftDestinationUpdate {
  RoleARN?: string | undefined;
  ClusterJDBCURL?: string | undefined;
  CopyCommand?: CopyCommand | undefined;
  Username?: string | undefined;
  Password?: string | undefined;
  RetryOptions?: RedshiftRetryOptions | undefined;
  S3Update?: S3DestinationUpdate | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  S3BackupMode?: RedshiftS3BackupMode | undefined;
  S3BackupUpdate?: S3DestinationUpdate | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  SecretsManagerConfiguration?: SecretsManagerConfiguration | undefined;
}
export interface SnowflakeDestinationUpdate {
  AccountUrl?: string | undefined;
  PrivateKey?: string | undefined;
  KeyPassphrase?: string | undefined;
  User?: string | undefined;
  Database?: string | undefined;
  Schema?: string | undefined;
  Table?: string | undefined;
  SnowflakeRoleConfiguration?: SnowflakeRoleConfiguration | undefined;
  DataLoadingOption?: SnowflakeDataLoadingOption | undefined;
  MetaDataColumnName?: string | undefined;
  ContentColumnName?: string | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  RoleARN?: string | undefined;
  RetryOptions?: SnowflakeRetryOptions | undefined;
  S3BackupMode?: SnowflakeS3BackupMode | undefined;
  S3Update?: S3DestinationUpdate | undefined;
  SecretsManagerConfiguration?: SecretsManagerConfiguration | undefined;
  BufferingHints?: SnowflakeBufferingHints | undefined;
}
export interface SplunkDestinationUpdate {
  HECEndpoint?: string | undefined;
  HECEndpointType?: HECEndpointType | undefined;
  HECToken?: string | undefined;
  HECAcknowledgmentTimeoutInSeconds?: number | undefined;
  RetryOptions?: SplunkRetryOptions | undefined;
  S3BackupMode?: SplunkS3BackupMode | undefined;
  S3Update?: S3DestinationUpdate | undefined;
  ProcessingConfiguration?: ProcessingConfiguration | undefined;
  CloudWatchLoggingOptions?: CloudWatchLoggingOptions | undefined;
  BufferingHints?: SplunkBufferingHints | undefined;
  SecretsManagerConfiguration?: SecretsManagerConfiguration | undefined;
}
export interface UpdateDestinationInput {
  DeliveryStreamName: string | undefined;
  CurrentDeliveryStreamVersionId: string | undefined;
  DestinationId: string | undefined;
  S3DestinationUpdate?: S3DestinationUpdate | undefined;
  ExtendedS3DestinationUpdate?: ExtendedS3DestinationUpdate | undefined;
  RedshiftDestinationUpdate?: RedshiftDestinationUpdate | undefined;
  ElasticsearchDestinationUpdate?: ElasticsearchDestinationUpdate | undefined;
  AmazonopensearchserviceDestinationUpdate?:
    | AmazonopensearchserviceDestinationUpdate
    | undefined;
  SplunkDestinationUpdate?: SplunkDestinationUpdate | undefined;
  HttpEndpointDestinationUpdate?: HttpEndpointDestinationUpdate | undefined;
  AmazonOpenSearchServerlessDestinationUpdate?:
    | AmazonOpenSearchServerlessDestinationUpdate
    | undefined;
  SnowflakeDestinationUpdate?: SnowflakeDestinationUpdate | undefined;
  IcebergDestinationUpdate?: IcebergDestinationUpdate | undefined;
}
export interface UpdateDestinationOutput {}
export declare const HttpEndpointConfigurationFilterSensitiveLog: (
  obj: HttpEndpointConfiguration
) => any;
export declare const HttpEndpointCommonAttributeFilterSensitiveLog: (
  obj: HttpEndpointCommonAttribute
) => any;
export declare const HttpEndpointRequestConfigurationFilterSensitiveLog: (
  obj: HttpEndpointRequestConfiguration
) => any;
export declare const HttpEndpointDestinationConfigurationFilterSensitiveLog: (
  obj: HttpEndpointDestinationConfiguration
) => any;
export declare const RedshiftDestinationConfigurationFilterSensitiveLog: (
  obj: RedshiftDestinationConfiguration
) => any;
export declare const SnowflakeRoleConfigurationFilterSensitiveLog: (
  obj: SnowflakeRoleConfiguration
) => any;
export declare const SnowflakeVpcConfigurationFilterSensitiveLog: (
  obj: SnowflakeVpcConfiguration
) => any;
export declare const SnowflakeDestinationConfigurationFilterSensitiveLog: (
  obj: SnowflakeDestinationConfiguration
) => any;
export declare const CreateDeliveryStreamInputFilterSensitiveLog: (
  obj: CreateDeliveryStreamInput
) => any;
export declare const HttpEndpointDescriptionFilterSensitiveLog: (
  obj: HttpEndpointDescription
) => any;
export declare const HttpEndpointDestinationDescriptionFilterSensitiveLog: (
  obj: HttpEndpointDestinationDescription
) => any;
export declare const RedshiftDestinationDescriptionFilterSensitiveLog: (
  obj: RedshiftDestinationDescription
) => any;
export declare const SnowflakeDestinationDescriptionFilterSensitiveLog: (
  obj: SnowflakeDestinationDescription
) => any;
export declare const DestinationDescriptionFilterSensitiveLog: (
  obj: DestinationDescription
) => any;
export declare const DeliveryStreamDescriptionFilterSensitiveLog: (
  obj: DeliveryStreamDescription
) => any;
export declare const DescribeDeliveryStreamOutputFilterSensitiveLog: (
  obj: DescribeDeliveryStreamOutput
) => any;
export declare const HttpEndpointDestinationUpdateFilterSensitiveLog: (
  obj: HttpEndpointDestinationUpdate
) => any;
export declare const RedshiftDestinationUpdateFilterSensitiveLog: (
  obj: RedshiftDestinationUpdate
) => any;
export declare const SnowflakeDestinationUpdateFilterSensitiveLog: (
  obj: SnowflakeDestinationUpdate
) => any;
export declare const UpdateDestinationInputFilterSensitiveLog: (
  obj: UpdateDestinationInput
) => any;
